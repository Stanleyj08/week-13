package com.promineotech.jeep.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseStatus;

import com.promineotech.jeep.entity.Jeep;
import com.promineotech.jeep.entity.JeepModel;
import com.promineotech.jeep.entity.Order;

import io.swagger.v3.oas.annotations.OpenAPIDefinition;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.info.Info;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.servers.Server;

public interface JeepOrderController {
	@RequestMapping("/orders")
	@OpenAPIDefinition(info = @Info(title = "Jeep orders Service"), servers = {
			@Server(url = "http://localhost:8080", description = "Local server.")})
	

	 //@RequestMapping("/jeeps")
	public interface JeepSalesController {
		// @formatter:off
			@Operation(
					summary = "create an order for a jeep",
					description = "Returns the created jeep",
					responses = {
							@ApiResponse(
									responseCode = "201",
									description = "A list of Jeeps is returned",
									content = @Content( 
											
											mediaType = "application/json",
											schema = @Schema(implementation = Order.class))),
							@ApiResponse(
									responseCode = "400",
									description = "The request parameters are invalid",
									content = @Content(mediaType = "application/json")),
							@ApiResponse(
									responseCode = "404",
									description = "A jeep component not found with the input criteria",
									content = @Content(mediaType = "application/json")),
							@ApiResponse(
									responseCode = "500",
									description = "an unplanned error occurred",
									content = @Content(mediaType = "application/json"))
					},
					parameters = {
							@Parameter(
									name = "orderRequest",
									allowEmptyValue = false,
									required = true,
									description = "The order as JSON")
						
					}
				)
				
					
				
			  	@PostMapping
			  	@ResponseStatus(code = HttpStatus.CREATED)
		
			  	List<Jeep> fetchJeeps(
			  			
					  @RequestParam(required = false)
					  	JeepModel model,
					  @RequestParam(required = false)
					  	String trim);		// @formatter:on
	
}
}
